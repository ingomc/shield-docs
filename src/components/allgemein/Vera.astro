---
import VeraIssue from "./VeraIssue.astro";

// const JIRA_API_URL = 'https://vera.lan.huk-coburg.de/rest/api/2/search';
// const JIRA_API_URL = 'https://vera.lan.huk-coburg.de/rest/api/2/project/13702';
// const JIRA_API_URL = 'https://vera.lan.huk-coburg.de/rest/api/2/search?jql=project=13702 AND sprint in openSprints()';
const JIRA_API_URL =
    "https://vera.lan.huk-coburg.de/rest/api/2/search?jql=project=13702 AND sprint in openSprints() AND issuetype not in (Sub-task)";

const PAT = import.meta.env.JIRA_PAT;
process.env.NODE_TLS_REJECT_UNAUTHORIZED = "0";

// API-Call zur Build-Zeit
const response = await fetch(JIRA_API_URL, {
    method: "GET",
    headers: {
        Authorization: `Bearer ${PAT}`,
        Accept: "application/json",
    },
});

const data = await response.json();

const uxIssues = data.issues
    .filter((issue) => !issue.fields.issuetype.subtask) // Filtere Subtasks raus
    .filter((issue) => {
        const summary = issue.fields.summary.toUpperCase(); // Großschreibung für case-insensitive Suche
        return summary.includes("[UX") || summary.includes("[FIGMA");
    });

const devIssues = data.issues
    .filter((issue) => !issue.fields.issuetype.subtask) // Filtere Subtasks raus
    .filter((issue) => {
        const summary = issue.fields.summary.toUpperCase(); // Großschreibung für case-insensitive Suche
        return !summary.includes("[UX") && !summary.includes("[FIGMA");
    });

// const issues = data.issues.map((issue: { key: any; fields: { summary: any; description: any; subtasks: any; }; }) => ({
//   key: issue.key,
//   summary: issue.fields.summary,
//   description: issue.fields.description,
//   subTasks: issue.fields.subtasks || [] // Hier holen wir die Unteraufgaben
// }));
// console.log(data);

const currentDateTime = new Date().toLocaleString("de-DE", {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
});
---

<h2>{data.name}</h2>

<p>
    <code>{currentDateTime}</code>{data.description}
</p>
<a href=`${data.self}`>{data.self}</a>
<!-- Checkbox zum Ausblenden geschlossener Issues -->
<!-- Container für die Jira-Issues -->
<div id="issues-container">
    <label>
        <input type="checkbox" checked id="hideClosed" /> Geschlossene Issues ausblenden
    </label>
    <h3>DEV:</h3>
    <VeraIssue issues={devIssues} />
    
    <h3>UX:</h3>
    
    <VeraIssue issues={uxIssues} />
</div>
<script define:vars={{ data, devIssues }}>
    // 'issues' ist jetzt im Frontend verfügbar und kann hier verwendet werden
    console.log(data);
    console.log(devIssues);
</script>